<?xml version="1.0" encoding="UTF-8"?>
<DcpTestSuiteExtension xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:noNamespaceSchemaLocation="DCP-Testsuite-extension.xsd">
  

  <ForEach variableName="transition">
    <Set>
      <Test.transitions/>
    </Set>
    <If
      condition=" transition.sending != undefined &amp;&amp; transition.sending.stcRegister != undefined">
      <Update oldVariable="transition.sending.stcRegister.minorVersion"
        newVariable="slave.dcpMinorVersion"/>
      <Update oldVariable="transition.sending.stcRegister.majorVersion"
        newVariable="slave.dcpMajorVersion"/>
      <Update oldVariable="transition.sending.stcRegister.slaveUuid" newVariable="slave.uuid"/>
      <Update oldVariable="transition.sending.stcRegister.opMode" newVariable="1"/>
    </If>
  </ForEach>
	
  <ExtensionSet state="0">
     <!-- Wrong state in transition-->
    <ForEach variableName="oState">
      <Set>
        <DcpStates/>
      </Set>
      <If condition="state != oState">
        <AddTransition fromOffset="0" toOffset="1">
          <Sending>
            <STC_register>
              <Receiver>
                <Value value="1"/>
              </Receiver>
              <StateId>
                <Variable variablenname="oState"/>
              </StateId>
              <SlaveUUID>
                <Random/>
              </SlaveUUID>
              <OpMode>
                <Random/>
              </OpMode>
              <MajorVersion>
                <Random/>
              </MajorVersion>
              <MinorVersion>
                <Random/>
              </MinorVersion>
            </STC_register>
          </Sending>
        </AddTransition>
        <AddTransition fromOffset="1" toOffset="2">
          <Receiving>
            <RSP_nack>
              <Sender>
                <Value value="1"/>
              </Sender>
              <ErrorCode>
                <!-- INVALID_STATE_ID -->
                <Value value="8205"/>
              </ErrorCode>
            </RSP_nack>
          </Receiving>
        </AddTransition>
        <UpdateMaxStep increase="2"/>
      </If>
    </ForEach>
    <!-- Wrong operation mode -->
    <ForEach variableName="opMode">
      <Set>
        <DcpOpModes/>
      </Set>
      <IfVariableNotInDcpSlaveDescription>
        <AddTransition fromOffset="0" toOffset="1">
          <Sending>
            <STC_register>
              <Receiver>
                <Value value="1"/>
              </Receiver>
              <StateId>
                <Value value="0"/>
              </StateId>
              <SlaveUUID>
                <Variable variablenname="slave.uuid"/>
              </SlaveUUID>
              <OpMode>
                <Variable variablenname="opMode"/>
              </OpMode>
              <MajorVersion>
                <Random/>
              </MajorVersion>
              <MinorVersion>
                <Random/>
              </MinorVersion>
            </STC_register>
          </Sending>
        </AddTransition>
        <AddTransition fromOffset="1" toOffset="2">
          <Receiving>
            <RSP_nack>
              <Sender>
                <Value value="1"/>
              </Sender>
              <ErrorCode>
                <!-- INVALID_OP_MODE -->
                <Value value="8200"/>
              </ErrorCode>
            </RSP_nack>
          </Receiving>
        </AddTransition>
        <UpdateMaxStep increase="2"/>
      </IfVariableNotInDcpSlaveDescription>
    </ForEach>
    <!-- Wrong UUID -->
    <AddTransition fromOffset="0" toOffset="1">
      <Sending>
        <STC_register>
          <Receiver>
            <Value value="1"/>
          </Receiver>
          <StateId>
            <Value value="0"/>
          </StateId>
          <SlaveUUID>
            <Invalid/>
          </SlaveUUID>
          <OpMode>
            <Random/>
          </OpMode>
          <MajorVersion>
            <Random/>
          </MajorVersion>
          <MinorVersion>
            <Random/>
          </MinorVersion>
        </STC_register>
      </Sending>
    </AddTransition>
    <AddTransition fromOffset="1" toOffset="2">
      <Receiving>
        <RSP_nack>
          <Sender>
            <Value value="1"/>
          </Sender>
          <ErrorCode>
            <!-- INVALID_UUID -->
            <Value value="8209"/>
          </ErrorCode>
        </RSP_nack>
      </Receiving>
    </AddTransition>
    <UpdateMaxStep increase="2"/>

    <!-- major version does not match-->
    <AddTransition fromOffset="0" toOffset="1">
      <Sending>
        <STC_register>
          <Receiver>
            <Value value="1"/>
          </Receiver>
          <StateId>
            <Value value="0"/>
          </StateId>
          <SlaveUUID>
            <Random/>
          </SlaveUUID>
          <OpMode>
            <Random/>
          </OpMode>
          <MajorVersion>
            <Invalid/>
          </MajorVersion>
          <MinorVersion>
            <Random/>
          </MinorVersion>
        </STC_register>
      </Sending>
    </AddTransition>
    <AddTransition fromOffset="1" toOffset="2">
      <Receiving>
        <RSP_nack>
          <Sender>
            <Value value="1"/>
          </Sender>
          <ErrorCode>
            <!-- INVALID_MAJOR_VERSION -->
            <Value value="8197"/>
          </ErrorCode>
        </RSP_nack>
      </Receiving>
    </AddTransition>
    <UpdateMaxStep increase="2"/>
    <!-- minor version does not match-->
    <AddTransition fromOffset="0" toOffset="1">
      <Sending>
        <STC_register>
          <Receiver>
            <Value value="1"/>
          </Receiver>
          <StateId>
            <Value value="0"/>
          </StateId>
          <SlaveUUID>
            <Random/>
          </SlaveUUID>
          <OpMode>
            <Random/>
          </OpMode>
          <MajorVersion>
            <Random/>
          </MajorVersion>
          <MinorVersion>
            <Invalid/>
          </MinorVersion>
        </STC_register>
      </Sending>
    </AddTransition>
    <AddTransition fromOffset="1" toOffset="2">
      <Receiving>
        <RSP_nack>
          <Sender>
            <Value value="1"/>
          </Sender>
          <ErrorCode>
            <!-- INVALID_MINOR_VERSION -->
            <Value value="8198"/>
          </ErrorCode>
        </RSP_nack>
      </Receiving>
    </AddTransition>
    <UpdateMaxStep increase="2"/>
  </ExtensionSet>

  <ForEach variableName="step">
    <Set>
      <Test.steps/>
    </Set>
    <If
      condition="determineState(step) == 9 ||Â determineState(step) == 10 || determineState(step) == 11">
      <ForEach variableName="output">
        <Set>
          <Slave.Outputs/>
        </Set>
        <AddTransition fromVariable="step" toVariable="step" log="true">
          <Receiving>
            <DAT_input_output>
              <DataId>
                <Variable variablenname="dataId(output.valueReference)"/>
              </DataId>
              <ReceivingPayloadField pos="0">
                <Condition condition="minMaxDefined(output.valueReference)">
                  <ConditionFullfilled>
                    <BetweenMinMax valueReferenceVariable="output.valueReference"/>
                  </ConditionFullfilled>
                  <Else>
                    <Any valueReferenceVariable="output.valueReference"/>
                  </Else>
                </Condition>
              </ReceivingPayloadField>
            </DAT_input_output>
          </Receiving>
        </AddTransition>
      </ForEach>
      <ForEach variableName="input">
        <Set>
          <Slave.Inputs/>
        </Set>
        <AddTransition fromVariable="step" toVariable="step">
          <Sending>
            <ClockTime
              numerator="1000"
              denominator="1000"/>
            <DAT_input_output>
              <DataId>
                <Variable variablenname="dataId(input.valueReference)"/>
              </DataId>
              <SendingPayloadField pos="0">
                <Default valueReferenceVariable="input.valueReference"/>
              </SendingPayloadField>
            </DAT_input_output>
          </Sending>
        </AddTransition>
      </ForEach>
      <!-- Send Dat_parameter -->
      <ForEach variableName="parameter">
        <Set>
          <Slave.TunableParameters/>
        </Set>
        <AddTransition fromVariable="step" toVariable="step">
          <Sending>
            <ClockTime
             numerator="1000"
              denominator="1000"/>
            <DAT_parameter>
              <ParamId>
                <Variable variablenname="paramId(parameter.valueReference)"/>
              </ParamId>
              <SendingPayloadField pos="0">
                <Default valueReferenceVariable="parameter.valueReference"/>
              </SendingPayloadField>
            </DAT_parameter>
          </Sending>
        </AddTransition>
      </ForEach>
    </If>
    <If condition="determineState(step) == 8 || determineState(step) == 14">
      <ForEach variableName="output">
        <Set>
          <Slave.Outputs/>
        </Set>
        <AddTransition fromVariable="step" toVariable="step">
          <Receiving>
            <DAT_input_output>
              <DataId>
                <Variable variablenname="dataId(output.valueReference)"/>
              </DataId>
              <ReceivingPayloadField pos="0">
                <Condition condition="minMaxDefined(output.valueReference)">
                  <ConditionFullfilled>
                    <BetweenMinMax valueReferenceVariable="output.valueReference"/>
                  </ConditionFullfilled>
                  <Else>
                    <Any valueReferenceVariable="output.valueReference"/>
                  </Else>
                </Condition>
              </ReceivingPayloadField>
            </DAT_input_output>
          </Receiving>
        </AddTransition>
      </ForEach>
    </If>
  </ForEach>

</DcpTestSuiteExtension>